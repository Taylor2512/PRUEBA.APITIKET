// <auto-generated />
using System;
using INFRASTRUCTURE.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221005192931_12")]
    partial class _12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_bin")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("DOMAIN.Entities.Historial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("comentario_trabajo_realizado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("feca_de_ingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_modificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<Guid>("id_Ticket")
                        .HasColumnType("char(36)");

                    b.Property<string>("usuario_soporte")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("id_Ticket");

                    b.ToTable("tbl_historial", (string)null);
                });

            modelBuilder.Entity("DOMAIN.Entities.Tikect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("asunto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descripcion_de_licencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("feca_de_ingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("fecha_modificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<string>("nameTicket")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("numberTicket")
                        .HasColumnType("bigint");

                    b.Property<string>("persona_solicitante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("numberTicket")
                        .HasDatabaseName("UX_IDTypes_numberTicket");

                    b.ToTable("tbl_ticket", (string)null);
                });

            modelBuilder.Entity("DOMAIN.Entities.Historial", b =>
                {
                    b.HasOne("DOMAIN.Entities.Tikect", "Tikect")
                        .WithMany("historial")
                        .HasForeignKey("id_Ticket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ticket_histrial");

                    b.Navigation("Tikect");
                });

            modelBuilder.Entity("DOMAIN.Entities.Tikect", b =>
                {
                    b.Navigation("historial");
                });
#pragma warning restore 612, 618
        }
    }
}
